function myfastawrite(filename,header,seq)
%FASTAWRITE writes FASTA format file.
%
%   FASTAWRITE(FILENAME, DATA) writes the contents of DATA to file FILENAME
%   in the FASTA format. DATA can be a sequence (or sequences) represented
%   as a character array, a sequence object, a structure containing the
%   fields sequence and header, or a GenBank/GenPept structure.
%
%   FASTAWRITE(FILENAME, HEADER, SEQ) writes a FASTA file with header
%   information HEADER and sequence SEQ.
%
%   FASTA format specified here:
%   https://www.ncbi.nlm.nih.gov/BLAST/fasta.shtml
%
%   Example:
%
%      %get the sequence for the human p53 gene from GenBank.
%      seq = getgenbank('NM_000546')
%
%      %read the coordinates of the coding region.
%      start = seq.CDS.indices(1)
%      stop = seq.CDS.indices(2)
%
%      %extract the coding region.
%      codingSeq = seq.Sequence(start:stop)
%
%      %write just the coding region to a FASTA file.
%      fastawrite('p53coding.txt','Coding region of p53 gene',codingSeq);
%
%      %You can also write multiple sequences from a structure with
%      %FASTAWRITE.
%      data(1).Sequence = 'ACACAGGAAA'
%      data(1).Header = 'First sequence'
%      data(2).Sequence = 'ACACAGGAAA'
%      data(2).Header = 'Second sequence'
%      fastawrite('twoSequences.fa',data)
%      type('twoSequences.fa')
%
%   See also FASTAINFO, FASTAREAD, FASTQINFO, FASTQREAD, FASTQWRITE,
%   MULTIALIGNWRITE, SEQVIEWER, SFFINFO, SFFREAD.

%   Copyright 2002-2016 The MathWorks, Inc.

bioinfochecknargin(nargin,2,mfilename)

if ~ischar(filename)
    error(message('bioinfo:fastawrite:FilenameMustBeString'));
end

% The default behavior is to append to the file. If the file exists we
% warn, however, we don't want to warn about appending until we are sure we
% can open the file.
appendFlag = false;
if exist(filename,'file')
    appendFlag = true;
end
fid = fopen(filename,'a','n','UTF-8');

if fid == (-1)
    [theDir, theFile, theExtension] = fileparts(filename);
    if ~isempty(theDir)
        error(message('bioinfo:fastawrite:CouldNotOpenFileinDir', [ theFile, theExtension ], theDir));
    else
        error(message('bioinfo:fastawrite:CouldNotOpenFileinPwd', filename));
    end
end
if appendFlag
    warning(message('bioinfo:fastawrite:AppendToFile', filename));
end
try
    if nargin == 2
        % see if we have a sequence or a structure
        if ischar(header)
            seq = {header};
			numSequences = numel(seq);
			header = cell(numSequences,1);
            header(:) = {sprintf('Generated by MATLAB %s',datestr(now))};
        elseif isstruct(header)
			if isfield(header,'Sequence')
				seq = {header.Sequence};
			else
				error(message('bioinfo:fastawrite:NoSequenceInStructure'));
			end
            try
                noHeader = false;
                numSequences = numel(seq);
                if isfield(header,'Header')
                    header = {header.Header};
                elseif isfield(header,'GI')  % GenBank/GenPept
                    newheader = cell(numSequences,1);
                    for i=1:numSequences
                        newheader{i} = ['gi|' header(i).GI '|gb|' header(i).Version '| ' header(i).Definition];
                    end
                    header = newheader;
                elseif isfield(header,'Identification')  % EMBL
                    newheader = cell(numSequences,1);
                    for i=1:numSequences
                        newheader{i} = ['embl|' header(i).Accession '| ' header(i).Description];
                    end
                    header = newheader;
                else
                    noHeader = true;
                end
            catch allExceptions %#ok<NASGU>
                noHeader = true;
            end
            if noHeader
                error(message('bioinfo:fastawrite:NoHeaderInStructure'));
            end
        else
            error(message('bioinfo:fastawrite:BadData'))
        end
	else
		if ischar(seq)
		    seq = cellstr(seq);
		end
		if ischar(header)
		    header = cellstr(header);
		end
        numSequences = numel(seq);
    end

    for i=1:numSequences
        currseq = deblank(seq{i});
        currheader = deblank(header{i});
        len = size(currseq,2);
        if len == 0
            error(message('bioinfo:fastawrite:EmptySeq'));
        end
        % Add the > token if needed
        if isempty(currheader) || currheader(1) ~= '>'
            fprintf(fid,'>%s\n',currheader);
        else
            fprintf(fid,'%s\n',currheader);
        end
        maxcols = 70; % NCBI uses 70 columns for their FASTA files
        for line = 1:ceil(len/maxcols)
            start = ((line - 1) * maxcols) + 1;
            stop = min((line * maxcols),len);
            fprintf(fid,'%s\n',currseq(start:stop));
        end
        %fprintf(fid,'\n');
    end
    fclose(fid);
catch le
    % close
	fclose(fid);
	
	% delete only if it was a newly created file
	if ~appendFlag
		delete(filename);
	end

    %rethrow the error
    rethrow(le);
end
